# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  macos: circleci/macos@2.3.2

references:
  defaults: &defaults
    working_directory: /Users/distiller/project
    macos:
        xcode: "13.4.1"

  derived_data_path: &derived_data_path build

  persist_data: &persist_workspace
          persist_to_workspace:
              root: .
              paths:
                - project/DerivedData/Build/Products # This is the built app that can then be ran against for testing
                - project/fastlane # So we can run Fastlane on the parallel jobs
                - project/Gemfile # So we can run Fastlane on the parallel jobs
                - project/Gemfile.lock # So we can run Fastlane on the parallel jobs
                - project/commit_author # Used for the Slack message integration in Fastlane
                - .gem # So we can run Fastlane on the parallel jobs

  attach_data: &attach_workspace
        attach_workspace:
            at: .      
  
  save_bundle: &save_bundle
      save_cache:
          key: circlev2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  restore_bundle: &restore_bundle
    restore_cache:
        key: circlev2-{{ checksum "Gemfile.lock" }}

  pre_run_iphone: &pre_run_iphone
      macos/preboot-simulator:
          version: "15.5"
          platform: "iOS"
          device: "iPhone 13"            

jobs:
  fetch:
    <<: *defaults
    steps:
      - checkout
      - *restore_bundle
      - run: ls .. && bundle install --jobs=4 --retry=3 --path vendor/bundle
      - *save_bundle
      - *persist_workspace
  
  build-for-test:
    <<: *defaults
    environment:
      SCAN_DEVICE: iPhone 13
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: test
    steps:
      - *attach_workspace
      - run:
          name: Build for testing
          command: bundle exec fastlane build_for_ui_test
          environment:
              SCAN_DEVICE: iPhone 13
              SCAN_SCHEME: AmazingSeriesUITests
      - persist_to_workspace:
          root: .
          paths:
              - *derived_data_path
  
  ui-tests:
    <<: *defaults
    parallelism: 4 
    steps:
        - *attach_workspace
        - *pre_run_iphone
        - run:
            name: Run ui tests
            command: |
              CLASSNAMES=$(circleci tests glob "AmazingSeriesUITests/*.swift" \
                | sed 's@/@.@g' \
                | sed 's/.swift//' \
                | circleci tests split --split-by=timings --timings-type=classname)
              FASTLANE_ARGS=$(echo $CLASSNAMES | sed -e 's/\./\//g' -e 's/ /,/g')
              bundle exec fastlane ui_test_without_building tests:$FASTLANE_ARGS
            environment:
                SCAN_DEVICE: iPhone 13
                SCAN_SCHEME: AmazingSeriesUITests
        - run:
            command: mv fastlane/test_output/report.junit fastlane/test_output/ui_tests_report.xml
            when: always


workflows:
  version: 2
  build-and-test:
    jobs:
      - fetch
      - build-for-test:
          name: amazingseries_uitests_scheme_build
          requires:
              - fetch
      - ui-tests:
          requires:
            - amazingseries_uitests_scheme_build